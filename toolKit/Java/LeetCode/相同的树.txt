/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isSameTree(TreeNode p, TreeNode q) {
        //recurision method
        if(p == null && q == null) return true;
        if(p == null && q != null || p != null && q == null) return false;
        if(p.val != q.val) return false;
        return isSameTree(p.left, q.left) && isSameTree(p.right, q.right);
    }
}
*递归方法(recurision):直接或间接调用自己的算法
 计算机科学中是指一种通过重复将问题分解为同类的子问题而解决问题的方法。
*递归的三个条件：
	边界条件
	递归前进段
	递归返回段
	当边界条件不满足时，递归前进；当边界条件满足时，递归返回。(什么情况下return true,return false)